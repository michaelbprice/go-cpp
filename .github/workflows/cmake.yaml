name: Build/Test cross-platform CMake project

on:
  pull_request:
    paths-ignore:
      - .github/workflows/dependency-cache.yaml
      - .github/workflows/msvc-analysis.yaml
  workflow_dispatch:

jobs:
  job:
    name: ${{ matrix.os }} - ${{ matrix.cmake_preset }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-12 ]
        cmake_preset: [ debug, release ]

    env:
      NUGET_SOURCE_NAME: github

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Fetch Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Authenticate to GitHub NuGet registry
      run: >
        nuget
        sources add
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        -storepasswordincleartext
        -name "${{ env.NUGET_SOURCE_NAME }}"
        -username "${{ github.actor }}"
        -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Use vcpkg to fetch dependencies
      env:
        VCPKG_BINARY_SOURCES: 'clear;nuget,${{ env.NUGET_SOURCE_NAME }},read'
      run: vcpkg install

    - name: Configure and run CMake
      uses: lukka/run-cmake@v10
      env:
        VCPKG_ROOT: ${{ fromJSON('[ "/usr/local/share/vcpkg", "C:\\vcpkg" ]')[runner.os == 'Windows'] }}
        CC: ${{ fromJSON('{"Linux":"gcc-10", "macOS":"clang", "Windows":"" }')[runner.os] }}
        CXX: ${{ fromJSON('{"Linux":"g++-10", "macOS":"clang++", "Windows":"" }')[runner.os] }}
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        configurePreset: ${{ matrix.cmake_preset }}
        buildPreset: ${{ matrix.cmake_preset }}
        testPreset: ${{ matrix.cmake_preset }}

    - name: Generate Test Report
      uses: dorny/test-reporter@v1.5.0
      if: success() || failure()
      with:
        name: goimpl-tests - ${{ matrix.os }} - ${{ matrix.cmake_preset }}
        path: out/${{ matrix.cmake_preset }}/junit-output/*
        reporter: java-junit